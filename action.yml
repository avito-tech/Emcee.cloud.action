name: 'Emcee.cloud action'
description: 'This action encapsulates Command-Line interface for Emcee.cloud'
author: 'Avito'

inputs:
  cloud_url:
    description: 'Emcee.cloud URL (default "https://emcee.cloud")'
    required: false
  emcee_token:
    description: 'Token for emcee.cloud API'
    required: true
  platform:
    description: 'ios/android'
    required: true
  config_path:
    description: 'Path to emcee.cloud config file'
    required: false
  app_path:
    description: 'App binary (Path/URL) which you want to test'
    required: false
  envs:
    description: 'Comma separated envs ex.ENV1=value1,ENV2=value2'
    required: false
  device_os_version:
    description: 'Device OS version (API level for Android). ex --os_version 34 --os_version iOS-17-0'
    required: false
  output_folder:
    description: 'Output folder for test run results. Default: current folder'
    required: false
  reports:
    description: 'Comma separated list of reports to be downloaded upon completion. ex:allure,junit'
    required: false
  runner:
    description: '[iOS] Path/URL to your test runner. [Android. Optional] Class name of your test runner'
    required: false
  tests_app_path:
    description: 'Binary (Path/URL) with tests'
    required: false
  wait_for_finish:
    description: 'Waiting for the tests to complete. Default: true'
    required: false


# Define your outputs here.
outputs:
  reports_path:
    description: 'Path to downloaded reports'

runs:
  using: 'docker'
  image: 'Dockerfile'
  env:
    EMCEE_CLOUD_URL : ${{ inputs.cloud_url }}
    EMCEE_TOKEN : ${{ inputs.emcee_token }}
    EMCEE_PLATFORM : ${{ inputs.platform }}
    EMCEE_CONFIG_PATH : ${{ inputs.config_path }}
    EMCEE_APP_PATH : ${{ inputs.app_path }}
    EMCEE_ENVS : ${{ inputs.envs }}
    EMCEE_DEVICE_OS_VERSION : ${{ inputs.device_os_version }}
    EMCEE_OUTPUT_FOLDER : ${{ inputs.output_folder }}
    EMCEE_REPORTS : ${{ inputs.reports }}
    EMCEE_RUNNER : ${{ inputs.runner }}
    EMCEE_TESTS_APP_PATH : ${{ inputs.tests_app_path }}
    EMCEE_WAIT_FOR_FINISH : ${{ inputs.wait_for_finish }}

branding:
  icon: 'activity'
  color: 'purple'
